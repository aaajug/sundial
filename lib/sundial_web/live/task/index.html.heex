<%= if @live_action in [:new, :edit] do %>
  <.modal return_to={@return_target}>
    <.live_component
      module={AliveWeb.TaskLive.FormComponent}
      id={@task.id || :new}
      title={@page_title}
      action={@live_action}
      task={@task}
      status={@status}
      serial_task={@serial_task}
      return_to={@return_target}
    />
  </.modal>
<% end %>

<% 
  # TODO: Relocate out of view  
  #grouped_tasks = Enum.chunk_by(@tasks, fn(task) -> task.status end)
  status_labels = %{1 => "Not yet started", 2 => "In progress", 3 => "On hold", 4 => "Completed"}
%>

<div>
  <a href={@sort_target}>
    <button class={"button is-small " <> @sort_class}>
      <span class="icon is-small">
        <ion-icon name="funnel-outline"></ion-icon> 
      </span>
      <span>Use default sorting</span>
    </button>
  </a>
</div>

<div class="columns pt-4">
  <%= for status_id <- [1,2,3,4] do %>
    <% group = Enum.filter(@tasks, fn task -> task.status == status_id end) %>
    <div class="content column pane is-one-fourth mr-3 relative">
      <div class="is-size-6 has-text-weight-very-light pb-1">
        <%= status_labels[status_id] %> (<%= Enum.count(group) %>)
      </div>

      <div class="task-list">
        <%= for task <- group do %>
          <div class="task-card-component" data-drag_hook={@drag_hook}>
            <.live_component module={SundialWeb.Live.Task.TaskComponent} id={task.id} drag_hook={@drag_hook} return_to={@return_target} />
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
</div>